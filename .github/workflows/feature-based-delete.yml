name: Delete feature
on:
  pull_request:
    types: [closed]
    branches:
      - deploy/**

jobs:
  delete:
    if: github.event.pull_request.merged == true
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - uses: mdecoleman/pr-branch-name@2.0.0
        id: vars
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "name=$(echo ${{ steps.vars.outputs.branch }} | sed 's/^deploy\///')" >> $GITHUB_ENV
        id: extract_branch

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN_STAGING }}

      - name: install helm
        env:
          HELM_VERSION: "3.9.2"
        run: |
          wget -q https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz
          tar -xzf helm-v${HELM_VERSION}-linux-amd64.tar.gz
          install linux-amd64/helm /usr/local/bin
          helm version

      - name: install kustomize
        env:
          KUSTOMIZE_VERSION: "4.5.6"
        run: |
          wget -q https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz
          tar -xzf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz
          install kustomize /usr/local/bin
          kustomize version

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_STAGING }}

      - name: remove previous redis feature
        continue-on-error: true
        run: |
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/redis-k8s/base/kustomization.yaml
          kustomize build $GITHUB_WORKSPACE/redis-k8s/overlays/staging/ --enable-helm  | kubectl delete -f -

      - name: remove previous aggregation feature
        continue-on-error: true
        run: |
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/feature-based/all.yaml
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/feature-based/deploy.yaml
          NAME=${{ env.name }} && sed -i 's|<BRANCH>|'${NAME}'|' $GITHUB_WORKSPACE/deployment/feature-based/remove-job.yaml
          kubectl delete -f $GITHUB_WORKSPACE/deployment/feature-based/all.yaml
          kubectl delete -f $GITHUB_WORKSPACE/deployment/feature-based/deploy.yaml
          kubectl create -f $GITHUB_WORKSPACE/deployment/feature-based/remove-job.yaml

      - name: Get CF A record ID
        continue-on-error: true
        shell: bash
        run: echo "record=$(echo $(curl -X GET "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/dns_records?type=A&name=${{ env.name }}-aggregation.subsocial.network&content=174.138.105.155&proxied=true&page=1&per_page=100&order=type&direction=desc&match=all"  -H "X-Auth-Email:${{ secrets.CF_MAIL }}"      -H "Authorization:Bearer ${{ secrets.CF_TOKEN }}"      -H "Content-Type:application/json" |  jq . | jq -c '.result[]' | jq -r .id) )" >> $GITHUB_ENV
        id: cf

      - name: delete CF A record
        continue-on-error: true
        run: curl -X DELETE "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/dns_records/${{ env.record }}"  -H "X-Auth-Email:${{ secrets.CF_MAIL }}"      -H "Authorization:Bearer ${{ secrets.CF_TOKEN }}"      -H "Content-Type:application/json"

      - name: final task
        if: always()
        run: echo "finished successfully"
